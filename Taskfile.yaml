version: "3"

tasks:
  setup:
    cmds:
    - task: check-prerequisites
    - task: setup-project
    desc: "Check prerequisites and setup project"

  check-prerequisites:
    cmds:
    - |
      if ! command -v docker > /dev/null; then
        echo "Error: docker is not installed."
        exit 1
      fi
    - |
      if ! command -v docker-compose > /dev/null; then
        echo "Error: docker-compose is not installed."
        exit 1
      fi
    - |
      if ! command -v python > /dev/null; then
        echo "Error: python is not installed."
        exit 1
      fi
    - |
      if ! command -v node > /dev/null; then
        echo "Error: node is not installed."
        exit 1
      fi
    - |
      if ! command -v npm > /dev/null; then
        echo "Error: npm is not installed."
        exit 1
      fi
    - |
      if ! docker info > /dev/null 2>&1; then
        echo "Error: Docker is not running."
        exit 1
      fi
    desc: "Check for required prerequisites: docker, docker-compose, python, node, npm"

  setup-project:
    cmds:
    - docker-compose up -d
    - python -m venv venv
    - |
      if [ "$OS" = "Windows_NT" ]; then
        venv\\Scripts\\activate
      else
        source venv/bin/activate
      fi
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - |
      cd node-cron && npm i
    desc: "Setup project environment: Docker, virtual environment, dependencies, migrations, and start node-cron service"

  run_server:
    cmds:
    - |
      if [ "$OS" = "Windows_NT" ]; then
        cmd /C "venv\\Scripts\\activate && python manage.py runserver"
      else
        source venv/bin/activate
        echo "Starting Django server..."
        bash -c 'nohup python3 manage.py runserver > django-server.log 2>&1 &'
        if [ $? -eq 0 ]; then
          echo "Django server is running."
        else
          echo "Failed to start Django server."
        fi
      fi
    desc: "Run the Django development server"


  run_scheduler:
    cmds:
    - |
      if [ "$OS" = "Windows_NT" ]; then
        cmd /C "start /B node node-cron/index.js "
      else
        bash -c 'nohup node node-cron/index.js > cronjob.out 2>&1 &'
        echo "Node Cron attached"
      fi
    desc: "Run the Django development server"

  stop_server:
    cmds:
    - |
      if [ "$OS" = "Windows_NT" ]; then
        taskkill /IM python.exe /F
        taskkill /IM node.exe /F
      else
        pkill -f python
        pkill -f node
      fi
    desc: "Stop both the Node.js cron job and the Django development server"
